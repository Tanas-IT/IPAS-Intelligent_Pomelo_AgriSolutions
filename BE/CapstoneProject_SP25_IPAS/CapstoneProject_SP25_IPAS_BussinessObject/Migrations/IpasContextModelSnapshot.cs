// <auto-generated />
using System;
using CapstoneProject_SP25_IPAS_BussinessObject.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapstoneProject_SP25_IPAS_BussinessObject.Migrations
{
    [DbContext(typeof(IpasContext))]
    partial class IpasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CarePlanSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("CarePlanId")
                        .HasColumnType("int")
                        .HasColumnName("CarePlanID");

                    b.Property<string>("CustomDates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<int?>("HarvestHistoryID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId")
                        .HasName("PK__CarePlan__9C8A5B694338D9F1");

                    b.HasIndex("CarePlanId")
                        .IsUnique()
                        .HasFilter("[CarePlanID] IS NOT NULL");

                    b.HasIndex("FarmID");

                    b.HasIndex("HarvestHistoryID");

                    b.ToTable("CarePlanSchedule", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsUser")
                        .HasColumnType("bit");

                    b.Property<string>("MessageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MessageContent")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MessageType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("MessageId")
                        .HasName("PK__ChatMess__C87C037C2C4F831C");

                    b.HasIndex("RoomId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int?>("AiresponseId")
                        .HasColumnType("int")
                        .HasColumnName("AIResponseID");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RoomName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RoomId")
                        .HasName("PK__ChatRoom__32863919A904C9FC");

                    b.HasIndex("CreateBy");

                    b.ToTable("ChatRoom", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Criteria", b =>
                {
                    b.Property<int>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CriteriaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriteriaId"));

                    b.Property<string>("CriteriaCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CriteriaDescription")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CriteriaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FrequencyDate")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("MasterTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("CriteriaId")
                        .HasName("PK__Criteria__FE6ADB2D5F0540FD");

                    b.HasIndex("MasterTypeID");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CriteriaTarget", b =>
                {
                    b.Property<int>("CriteriaTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CriteriaTargetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriteriaTargetId"));

                    b.Property<DateTime?>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CriteriaID")
                        .HasColumnType("int")
                        .HasColumnName("CriteriaID");

                    b.Property<int?>("GraftedPlantID")
                        .HasColumnType("int")
                        .HasColumnName("GraftedPlantID");

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit")
                        .HasColumnName("isChecked");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlantID")
                        .HasColumnType("int")
                        .HasColumnName("PlantID");

                    b.Property<int?>("PlantLotID")
                        .HasColumnType("int")
                        .HasColumnName("PlantLotID");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.HasKey("CriteriaTargetId")
                        .HasName("PK__CriteriaTarget__24324GHYRT5");

                    b.HasIndex("CriteriaID");

                    b.HasIndex("GraftedPlantID");

                    b.HasIndex("PlantID");

                    b.HasIndex("PlantLotID");

                    b.ToTable("CriteriaTarget", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CropID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CropId"));

                    b.Property<double?>("ActualYield")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CropActualTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CropCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CropExpectedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CropName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("EstimateYield")
                        .HasColumnType("float");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<string>("HarvestSeason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<double?>("MarketPrice")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("CropId")
                        .HasName("PK__Crop__923561351B1EF0E2");

                    b.HasIndex("FarmId");

                    b.ToTable("Crop", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", b =>
                {
                    b.Property<int>("FarmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<string>("ClimateZone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("District")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FarmCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FarmName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("LogoURL")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Province")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SoilType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ward")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("FarmId")
                        .HasName("PK__Farm__ED7BBA991346855A");

                    b.ToTable("Farm", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", b =>
                {
                    b.Property<int>("GraftedPlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GraftedPlantID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GraftedPlantId"));

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<string>("FinishedPlantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GraftedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GraftedPlantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("GraftedPlantName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MotherPlantId")
                        .HasColumnType("int")
                        .HasColumnName("MotherPlantID");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PlantLotId")
                        .HasColumnType("int")
                        .HasColumnName("PlantLotID");

                    b.Property<DateTime?>("SeparatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("GraftedPlantId")
                        .HasName("PK__GraftedP__883CF82ACBB74009");

                    b.HasIndex("MotherPlantId");

                    b.HasIndex("PlantLotId");

                    b.ToTable("GraftedPlant", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlantNote", b =>
                {
                    b.Property<int>("GraftedPlantNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GraftedPlantNoteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GraftedPlantNoteId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GraftedPlantId")
                        .HasColumnType("int")
                        .HasColumnName("GraftedPlantID");

                    b.Property<string>("GraftedPlantNoteCode")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("IssueName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NoteTaker")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("GraftedPlantNoteId")
                        .HasName("PK__GraftedP__09DC047162079786");

                    b.HasIndex("GraftedPlantId");

                    b.ToTable("GraftedPlantNote", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", b =>
                {
                    b.Property<int>("GrowthStageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GrowthStageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrowthStageID"));

                    b.Property<string>("ActiveFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<string>("GrowthStageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("GrowthStageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("MonthAgeEnd")
                        .HasColumnType("int");

                    b.Property<int?>("MonthAgeStart")
                        .HasColumnType("int");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GrowthStageID")
                        .HasName("PK__GrowthSt__B81FB6A5CB51E95C");

                    b.HasIndex("FarmID");

                    b.ToTable("GrowthStage", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStageMasterType", b =>
                {
                    b.Property<int>("GrowthStageMasterTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GrowthStageMasterTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrowthStageMasterTypeID"));

                    b.Property<int?>("FarmID")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<int?>("GrowthStageID")
                        .HasColumnType("int")
                        .HasColumnName("GrowthStageID");

                    b.Property<int?>("MasterTypeID")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.HasKey("GrowthStageMasterTypeID")
                        .HasName("PK__GrowthStageMasterType__23823GHYRT5");

                    b.HasIndex("FarmID");

                    b.HasIndex("GrowthStageID");

                    b.HasIndex("MasterTypeID");

                    b.ToTable("GrowthStageMasterType", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStagePlan", b =>
                {
                    b.Property<int>("GrowthStagePlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GrowthStagePlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrowthStagePlanID"));

                    b.Property<int?>("GrowthStageID")
                        .HasColumnType("int")
                        .HasColumnName("GrowthStageID");

                    b.Property<int?>("PlanID")
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    b.HasKey("GrowthStagePlanID")
                        .HasName("PK__GrowthStagePlan__26743GHYRT5");

                    b.HasIndex("GrowthStageID");

                    b.HasIndex("PlanID");

                    b.ToTable("GrowthStagePlan", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.HarvestHistory", b =>
                {
                    b.Property<int>("HarvestHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HarvestHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HarvestHistoryId"));

                    b.Property<int?>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("CropID");

                    b.Property<DateTime?>("DateHarvest")
                        .HasColumnType("datetime");

                    b.Property<string>("HarvestHistoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("HarvestHistoryNote")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("HarvestStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<bool?>("isDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.HasKey("HarvestHistoryId")
                        .HasName("PK__HarvestH__F15734AD189BFCA2");

                    b.HasIndex("CropId");

                    b.ToTable("HarvestHistory", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", b =>
                {
                    b.Property<int>("LandPlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LandPlotID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPlotId"));

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<bool?>("IsRowHorizontal")
                        .HasColumnType("bit");

                    b.Property<string>("LandPlotCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LandPlotName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<double?>("LineSpacing")
                        .HasColumnType("float");

                    b.Property<double?>("MaxLength")
                        .HasColumnType("float");

                    b.Property<double?>("MaxWidth")
                        .HasColumnType("float");

                    b.Property<double?>("MinLength")
                        .HasColumnType("float");

                    b.Property<double?>("MinWidth")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfRows")
                        .HasColumnType("int");

                    b.Property<int?>("RowPerLine")
                        .HasColumnType("int");

                    b.Property<double?>("RowSpacing")
                        .HasColumnType("float");

                    b.Property<string>("SoilType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TargetMarket")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("LandPlotId")
                        .HasName("PK__LandPlot__ADDF712A976DFB93");

                    b.HasIndex("FarmId");

                    b.ToTable("LandPlot", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlotCoordination", b =>
                {
                    b.Property<int>("LandPlotCoordinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LandPlotCoordinationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPlotCoordinationId"));

                    b.Property<string>("LandPlotCoordinationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("LandPlotId")
                        .HasColumnType("int")
                        .HasColumnName("LandPlotID");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("LandPlotCoordinationId")
                        .HasName("PK__LandPlot__AA254567BAC71490");

                    b.HasIndex("LandPlotId");

                    b.ToTable("LandPlotCoordination", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlotCrop", b =>
                {
                    b.Property<int>("LandPlotId")
                        .HasColumnType("int")
                        .HasColumnName("LandPlotID");

                    b.Property<int>("CropID")
                        .HasColumnType("int")
                        .HasColumnName("CropID");

                    b.HasKey("LandPlotId", "CropID")
                        .HasName("PK__LandPlotCrop__995F74677DAC5");

                    b.HasIndex("CropID");

                    b.ToTable("LandPlotCrop", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandRow", b =>
                {
                    b.Property<int>("LandRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LandRowID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandRowId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Direction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<int?>("LandPlotId")
                        .HasColumnType("int")
                        .HasColumnName("LandPlotID");

                    b.Property<string>("LandRowCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<double?>("MaxLength")
                        .HasColumnType("float");

                    b.Property<int?>("MaxNumberOfPlant")
                        .HasColumnType("int");

                    b.Property<double?>("MaxWidth")
                        .HasColumnType("float");

                    b.Property<double?>("MinLength")
                        .HasColumnType("float");

                    b.Property<double?>("MinWidth")
                        .HasColumnType("float");

                    b.Property<int?>("RowIndex")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TreeAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("LandRowId")
                        .HasName("PK__LandRow__0E72A6FAD7B08F4C");

                    b.HasIndex("LandPlotId");

                    b.ToTable("LandRow", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LegalDocument", b =>
                {
                    b.Property<int>("LegalDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LegalDocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LegalDocumentId"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LegalDocumentCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LegalDocumentName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("LegalDocumentName")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LegalDocumentType")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LegalDocumentURL")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("LegalDocumentURL")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Status")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("LegalDocumentId")
                        .HasName("PK__LegalDocument__2EE578CA467DABB5");

                    b.HasIndex("FarmId");

                    b.ToTable("LegalDocument", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", b =>
                {
                    b.Property<int>("MasterTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterTypeId"));

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Characteristic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsConflict")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("MasterTypeCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MasterTypeDescription")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MasterTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("MasterTypeId")
                        .HasName("MasterType_PK");

                    b.HasIndex("FarmID");

                    b.ToTable("MasterType", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<string>("NotificationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SenderID")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32F94B5C5B");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("SenderID");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("EnrolledDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BAF4F3F1E0A");

                    b.HasIndex("FarmId");

                    b.HasIndex("PackageId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PackageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PackageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<double?>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PackageId")
                        .HasName("PK__Package__322035EC04B44A12");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PackageDetail", b =>
                {
                    b.Property<int>("PackageDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PackageDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageDetailId"));

                    b.Property<string>("FeatureDescription")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FeatureName")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PackageDetailCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    b.HasKey("PackageDetailId")
                        .HasName("PK__PackageD__A7D8258A18A0833B");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageDetail", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Partner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerId"));

                    b.Property<string>("BusinessField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartnerId")
                        .HasName("PK__Partner__39FD6332F826F432");

                    b.HasIndex("FarmId");

                    b.ToTable("Partner", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TransactionID")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A58F4F846AB");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderID] IS NOT NULL");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<int?>("AssignorId")
                        .HasColumnType("int")
                        .HasColumnName("AssignorID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("CropID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<double?>("MaxVolume")
                        .HasColumnType("float");

                    b.Property<double?>("MinVolume")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PesticideName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlanCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlanDetail")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ProcessID");

                    b.Property<string>("ResponsibleBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SubProcessId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PlanId")
                        .HasName("PK__Plan__755C22D7C27C8EF5");

                    b.HasIndex("AssignorId");

                    b.HasIndex("CropId");

                    b.HasIndex("FarmID");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("SubProcessId");

                    b.ToTable("Plan", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlanNotification", b =>
                {
                    b.Property<int>("PlanNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanNotificationID"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateDate");

                    b.Property<int?>("NotificationID")
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    b.Property<int?>("PlanID")
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    b.Property<int?>("UserID")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<bool?>("isRead")
                        .HasColumnType("bit")
                        .HasColumnName("isRead");

                    b.HasKey("PlanNotificationID")
                        .HasName("PK__PlanNotification__2EE54234ADBB5");

                    b.HasIndex("NotificationID");

                    b.HasIndex("PlanID");

                    b.HasIndex("UserID");

                    b.ToTable("PlanNotification", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlanTarget", b =>
                {
                    b.Property<int>("PlanTargetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanTargetID"));

                    b.Property<int?>("GraftedPlantID")
                        .HasColumnType("int")
                        .HasColumnName("GraftedPlantID");

                    b.Property<int?>("LandPlotID")
                        .HasColumnType("int")
                        .HasColumnName("LandPlotID");

                    b.Property<int?>("LandRowID")
                        .HasColumnType("int")
                        .HasColumnName("LandRowID");

                    b.Property<int?>("PlanID")
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    b.Property<int?>("PlantID")
                        .HasColumnType("int")
                        .HasColumnName("PlantID");

                    b.Property<int?>("PlantLotID")
                        .HasColumnType("int")
                        .HasColumnName("PlantLotID");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanTargetID")
                        .HasName("PK__PlanTarget__2456GHYRT5");

                    b.HasIndex("GraftedPlantID");

                    b.HasIndex("LandPlotID");

                    b.HasIndex("LandRowID");

                    b.HasIndex("PlanID");

                    b.HasIndex("PlantID");

                    b.HasIndex("PlantLotID");

                    b.ToTable("PlanTarget", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlantID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<int?>("GrowthStageID")
                        .HasColumnType("int");

                    b.Property<string>("HealthStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ImageURL")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsDead")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<int?>("LandRowId")
                        .HasColumnType("int")
                        .HasColumnName("LandRowID");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<DateTime?>("PassedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PlantIndex")
                        .HasColumnType("int");

                    b.Property<string>("PlantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PlantReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("PlantReferenceID");

                    b.Property<DateTime?>("PlantingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PlantId")
                        .HasName("PK__Plant__98FE46BC7EA4DAD0");

                    b.HasIndex("GrowthStageID");

                    b.HasIndex("LandRowId");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("PlantReferenceId");

                    b.ToTable("Plant", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantGrowthHistory", b =>
                {
                    b.Property<int>("PlantGrowthHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlantGrowthHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantGrowthHistoryId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IssueName")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NoteTaker")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlantGrowthHistoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int")
                        .HasColumnName("PlantID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("PlantGrowthHistoryId")
                        .HasName("PK__PlantGro__8F26DC48C9286D17");

                    b.HasIndex("PlantId");

                    b.ToTable("PlantGrowthHistory", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", b =>
                {
                    b.Property<int>("PlantLotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlantLotID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantLotId"));

                    b.Property<int?>("FarmID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImportedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("InputQuantity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFromGrafted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<int?>("LastQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    b.Property<DateTime?>("PassedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantLotCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlantLotName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PlantLotReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("PlantLotReferenceID");

                    b.Property<int?>("PreviousQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UsedQuantity")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("PlantLotId")
                        .HasName("PK__PlantLot__58D457ABDE17F2CF");

                    b.HasIndex("FarmID");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PlantLotReferenceId");

                    b.ToTable("PlantLot", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Process", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<int?>("GrowthStageId")
                        .HasColumnType("int")
                        .HasColumnName("GrowthStageID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool?>("IsSample")
                        .HasColumnType("bit");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProcessId")
                        .HasName("PK__Process__1B39A976EDEF5BD5");

                    b.HasIndex("FarmId");

                    b.HasIndex("GrowthStageId");

                    b.HasIndex("MasterTypeId");

                    b.ToTable("Process", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ProductHarvestHistory", b =>
                {
                    b.Property<int>("ProductHarvestHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductHarvestHistoryId"));

                    b.Property<int?>("ActualQuantity")
                        .HasColumnType("int");

                    b.Property<double?>("CostPrice")
                        .HasColumnType("float");

                    b.Property<int>("HarvestHistoryId")
                        .HasColumnType("int")
                        .HasColumnName("HarvestHistoryID");

                    b.Property<int>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int")
                        .HasColumnName("PlantID");

                    b.Property<int?>("QuantityNeed")
                        .HasColumnType("int");

                    b.Property<double?>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductHarvestHistoryId")
                        .HasName("PK__HarvestT__CAE5744A780B99C5");

                    b.HasIndex("HarvestHistoryId");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("PlantId");

                    b.ToTable("ProductHarvestHistory", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.RefreshToken", b =>
                {
                    b.Property<int>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RefreshTokenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefreshTokenId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshTokenCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RefreshTokenValue")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RefreshTokenId")
                        .HasName("PK__RefreshT__F5845E59CBB4AB2D");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportID"));

                    b.Property<int?>("AnswererID")
                        .HasColumnType("int")
                        .HasColumnName("AnswererID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTrainned")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionerID")
                        .HasColumnType("int")
                        .HasColumnName("QuesttionerID");

                    b.Property<string>("ReportCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReportCode");

                    b.HasKey("ReportID")
                        .HasName("PK__Report__22783GHYRT5");

                    b.HasIndex("AnswererID");

                    b.HasIndex("QuestionerID");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ResourceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceID"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FileFormat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileFormat")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("GraftedPlantNoteID")
                        .HasColumnType("int");

                    b.Property<int?>("LegalDocumentID")
                        .HasColumnType("int");

                    b.Property<int?>("PlantGrowthHistoryID")
                        .HasColumnType("int");

                    b.Property<string>("ResourceCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ResourceType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ResourceURL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ResourceURL");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UserWorkLogID")
                        .HasColumnType("int");

                    b.HasKey("ResourceID")
                        .HasName("PK__Res__1974A137217179D1");

                    b.HasIndex("GraftedPlantNoteID");

                    b.HasIndex("LegalDocumentID");

                    b.HasIndex("PlantGrowthHistoryID");

                    b.HasIndex("UserWorkLogID");

                    b.ToTable("Resource", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool?>("IsSystem")
                        .HasColumnType("bit")
                        .HasColumnName("isSystem");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A5BC7203D");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.SubProcess", b =>
                {
                    b.Property<int>("SubProcessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubProcessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubProcessID"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentSubProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ParentSubProcessID");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ProcessID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProcessCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SubProcessName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("SubProcessID")
                        .HasName("PK__SubProce__F054A88CD66E5A59");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("ParentSubProcessId");

                    b.HasIndex("ProcessId");

                    b.ToTable("SubProcess", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.TaskFeedback", b =>
                {
                    b.Property<int>("TaskFeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaskFeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskFeedbackId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerID");

                    b.Property<string>("TaskFeedbackCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("WorkLogId")
                        .HasColumnType("int")
                        .HasColumnName("WorkLogID");

                    b.HasKey("TaskFeedbackId")
                        .HasName("PK__TaskFeed__9CC94E1953C81F4C");

                    b.HasIndex("ManagerId");

                    b.HasIndex("WorkLogId");

                    b.ToTable("TaskFeedback", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Type_Type", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID_1");

                    b.Property<int>("CriteriaSetId")
                        .HasColumnType("int")
                        .HasColumnName("MasterTypeID_2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MasterTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterTypeId1")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CriteriaSetId")
                        .HasName("PK_Type_Type__2F2CAR35609A834");

                    b.HasIndex("CriteriaSetId");

                    b.HasIndex("MasterTypeId");

                    b.HasIndex("MasterTypeId1");

                    b.ToTable("Type_Type", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AvatarURL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AvatarURL")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("ExpiredOtpTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDependency")
                        .HasColumnType("int");

                    b.Property<string>("Otp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemainDays")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACFB4299F2");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserFarm", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("FarmId")
                        .HasColumnType("int")
                        .HasColumnName("FarmID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("UserId", "FarmId")
                        .HasName("PK__UserFarm__995F77051197DAC5");

                    b.HasIndex("FarmId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserFarm", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserWorkLog", b =>
                {
                    b.Property<int>("UserWorkLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWorkLogID"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsReporter")
                        .HasColumnType("bit");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("WorkLogId")
                        .HasColumnType("int")
                        .HasColumnName("WorkLogID");

                    b.HasKey("UserWorkLogID")
                        .HasName("PK__UserWork__2F2CA1082A09A834");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkLogId");

                    b.ToTable("UserWorkLog", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Warning", b =>
                {
                    b.Property<int>("WarningId")
                        .HasColumnType("int")
                        .HasColumnName("WarningID");

                    b.Property<string>("AffectedStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Level")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WarningCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("WarningName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("WarningId")
                        .HasName("Warning_PK");

                    b.ToTable("Warning", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.WorkLog", b =>
                {
                    b.Property<int>("WorkLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkLogId"));

                    b.Property<TimeSpan?>("ActualEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ActualStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("ReasonDelay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("WarningId")
                        .HasColumnType("int")
                        .HasColumnName("WarningID");

                    b.Property<string>("WorkLogCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("WorkLogName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkLogId")
                        .HasName("PK__WorkLog__FE542DC2BB0A0EA4");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("WarningId");

                    b.ToTable("WorkLog", (string)null);
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CarePlanSchedule", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", "CarePlan")
                        .WithOne("CarePlanSchedule")
                        .HasForeignKey("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CarePlanSchedule", "CarePlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CarePlanS__CareP__2180FB33");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("CarePlanSchedules")
                        .HasForeignKey("FarmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_CarePlanSchedule_Farm");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.HarvestHistory", "HarvestHistory")
                        .WithMany("CarePlanSchedules")
                        .HasForeignKey("HarvestHistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_CarePlanSchedule_HarvestHistory");

                    b.Navigation("CarePlan");

                    b.Navigation("Farm");

                    b.Navigation("HarvestHistory");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatMessage", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatRoom", "Room")
                        .WithMany("ChatMessages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ChatMessa__RoomI__16CE6296");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatRoom", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "CreateByNavigation")
                        .WithMany("ChatRooms")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ChatRoom__Create__17C286CF");

                    b.Navigation("CreateByNavigation");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Criteria", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("Criterias")
                        .HasForeignKey("MasterTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("Criteria_Master_Type_FK");

                    b.Navigation("MasterType");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CriteriaTarget", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Criteria", "Criteria")
                        .WithMany("CriteriaTargets")
                        .HasForeignKey("CriteriaID")
                        .HasConstraintName("FK_CriteriaTarget_Criteria__345267C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", "GraftedPlant")
                        .WithMany("CriteriaTargets")
                        .HasForeignKey("GraftedPlantID")
                        .HasConstraintName("FK_CriteriaTarget_GraftedPlant__345234C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "Plant")
                        .WithMany("CriteriaTargets")
                        .HasForeignKey("PlantID")
                        .HasConstraintName("FK_CriteriaTarget_Plant__345245C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", "PlantLot")
                        .WithMany("CriteriaTargets")
                        .HasForeignKey("PlantLotID")
                        .HasConstraintName("FK_CriteriaTarget_PlantLot__345267C52");

                    b.Navigation("Criteria");

                    b.Navigation("GraftedPlant");

                    b.Navigation("Plant");

                    b.Navigation("PlantLot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("Crops")
                        .HasForeignKey("FarmId")
                        .HasConstraintName("FK_Crop_Farm");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "Plant")
                        .WithMany("GraftedPlants")
                        .HasForeignKey("MotherPlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__GraftedPl__Plant__531856C7");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", "PlantLot")
                        .WithMany("GraftedPlants")
                        .HasForeignKey("PlantLotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("GraftedPlant_PlantLot_FK");

                    b.Navigation("Plant");

                    b.Navigation("PlantLot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlantNote", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", "GraftedPlant")
                        .WithMany("GraftedPlantNotes")
                        .HasForeignKey("GraftedPlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_GraftedPlantNote_GraftedPlant");

                    b.Navigation("GraftedPlant");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("GrowthStages")
                        .HasForeignKey("FarmID")
                        .HasConstraintName("FK_GrowthStage_Farm");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStageMasterType", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("GrowthStageMasterTypes")
                        .HasForeignKey("FarmID")
                        .HasConstraintName("FK_GrowthStageMasterType_Farm__3234554C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", "GrowthStage")
                        .WithMany("GrowthStageMasterTypes")
                        .HasForeignKey("GrowthStageID")
                        .HasConstraintName("FK_GrowthStageMasterType_GrowthStage__35232C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("GrowthStageMasterTypes")
                        .HasForeignKey("MasterTypeID")
                        .HasConstraintName("FK_GrowthStageMasterType_MasterType__323154C52");

                    b.Navigation("Farm");

                    b.Navigation("GrowthStage");

                    b.Navigation("MasterType");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStagePlan", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", "GrowthStage")
                        .WithMany("GrowthStagePlans")
                        .HasForeignKey("GrowthStageID")
                        .HasConstraintName("FK_GrowthStagePlan_GrowthStage__35672C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", "Plan")
                        .WithMany("GrowthStagePlans")
                        .HasForeignKey("PlanID")
                        .HasConstraintName("FK_GrowthStagePlan_Plan__32314C52");

                    b.Navigation("GrowthStage");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.HarvestHistory", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", "Crop")
                        .WithMany("HarvestHistories")
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("HarvestHistory_Crop_FK");

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("LandPlots")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__LandPlot__FarmID__2739D489");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlotCoordination", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", "LandPlot")
                        .WithMany("LandPlotCoordinations")
                        .HasForeignKey("LandPlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__LandPlotC__LandP__31B762FC");

                    b.Navigation("LandPlot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlotCrop", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", "Crop")
                        .WithMany("LandPlotCrops")
                        .HasForeignKey("CropID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("LandPlotCrop_Crop_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", "LandPlot")
                        .WithMany("LandPlotCrops")
                        .HasForeignKey("LandPlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LandPlotCrop__LandPlotID__41B8C09B");

                    b.Navigation("Crop");

                    b.Navigation("LandPlot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandRow", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", "LandPlot")
                        .WithMany("LandRows")
                        .HasForeignKey("LandPlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__LandRow__LandPlo__22751F6C");

                    b.Navigation("LandPlot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LegalDocument", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("FarmId")
                        .HasConstraintName("FK__LegalDocument__Farm__29221CFB");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("MasterTypes")
                        .HasForeignKey("FarmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Master_Type_Farm__22751F6C");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Notification", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("Notifications")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("Notification_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "Sender")
                        .WithMany("NotificationSenders")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Notification_Sender");

                    b.Navigation("MasterType");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Order", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("Orders")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Order__FarmID__251C81ED");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Package", "Package")
                        .WithMany("Orders")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Order__PackageID__2610A626");

                    b.Navigation("Farm");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PackageDetail", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Package", "Package")
                        .WithMany("PackageDetails")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__PackageDe__Packa__2704CA5F");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Partner", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("Partners")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Partner__Farm");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Payment", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Payment__OrderID__28ED12D1");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("AssignorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Plan_Plan");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", "Crop")
                        .WithMany("Plans")
                        .HasForeignKey("CropId")
                        .HasConstraintName("FK_Plan_Crop35612");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("Plans")
                        .HasForeignKey("FarmID")
                        .HasConstraintName("FK_Plan_Farm");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("Plans")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Plan_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Process", "Process")
                        .WithMany("Plans")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Plan_Process");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.SubProcess", "SubProcess")
                        .WithMany("Plans")
                        .HasForeignKey("SubProcessId")
                        .HasConstraintName("FK_Plan_SubProcess");

                    b.Navigation("Crop");

                    b.Navigation("Farm");

                    b.Navigation("MasterType");

                    b.Navigation("Process");

                    b.Navigation("SubProcess");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlanNotification", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Notification", "Notification")
                        .WithMany("PlanNotifications")
                        .HasForeignKey("NotificationID")
                        .HasConstraintName("FK__PlanNotification__Notification__3B451819");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", "Plan")
                        .WithMany("PlanNotifications")
                        .HasForeignKey("PlanID")
                        .HasConstraintName("FK__PlanNotification__Plan__32673C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "User")
                        .WithMany("PlanNotifications")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__PlanNotification__User__38H51819");

                    b.Navigation("Notification");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlanTarget", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", "GraftedPlant")
                        .WithMany("PlanTargets")
                        .HasForeignKey("GraftedPlantID")
                        .HasConstraintName("FK_PlanTarget_GraftedPlant_3B445629");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", "LandPlot")
                        .WithMany("PlanTargets")
                        .HasForeignKey("LandPlotID")
                        .HasConstraintName("FK__PlanTarget_LandPlot__39KH52829");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandRow", "LandRow")
                        .WithMany("PlanTargets")
                        .HasForeignKey("LandRowID")
                        .HasConstraintName("FK__PlanTarget_LandRow__3256JH9");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", "Plan")
                        .WithMany("PlanTargets")
                        .HasForeignKey("PlanID")
                        .HasConstraintName("FK_PlanTarget_Plan__345619C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "Plant")
                        .WithMany("PlanTargets")
                        .HasForeignKey("PlantID")
                        .HasConstraintName("FK__PlanTarget_Plant__352ET4678");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", "PlantLot")
                        .WithMany("PlanTargets")
                        .HasForeignKey("PlantLotID")
                        .HasConstraintName("FK__PlanTarget_PlantLot__4056AE34");

                    b.Navigation("GraftedPlant");

                    b.Navigation("LandPlot");

                    b.Navigation("LandRow");

                    b.Navigation("Plan");

                    b.Navigation("Plant");

                    b.Navigation("PlantLot");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", "GrowthStage")
                        .WithMany("Plants")
                        .HasForeignKey("GrowthStageID")
                        .HasConstraintName("Plant_GrowthStage_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandRow", "LandRow")
                        .WithMany("Plants")
                        .HasForeignKey("LandRowId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Plant_LandRow_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("Plants")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Plant_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "PlantReference")
                        .WithMany("ChildPlants")
                        .HasForeignKey("PlantReferenceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GrowthStage");

                    b.Navigation("LandRow");

                    b.Navigation("MasterType");

                    b.Navigation("PlantReference");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantGrowthHistory", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "Plant")
                        .WithMany("PlantGrowthHistories")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__PlantNote__Plant__32AB8735");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("PlantLots")
                        .HasForeignKey("FarmID")
                        .HasConstraintName("FK_PlantLot_Farm");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("PlantLots")
                        .HasForeignKey("MasterTypeId")
                        .HasConstraintName("PlantLot_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Partner", "Partner")
                        .WithMany("PlantLots")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PlantLot_Partner");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", "PlantLotReference")
                        .WithMany("InversePlantLotReference")
                        .HasForeignKey("PlantLotReferenceId")
                        .HasConstraintName("PlantLot_PlantLot_FK");

                    b.Navigation("Farm");

                    b.Navigation("MasterType");

                    b.Navigation("Partner");

                    b.Navigation("PlantLotReference");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Process", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("Processes")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Process_Farm_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", "GrowthStage")
                        .WithMany("Processes")
                        .HasForeignKey("GrowthStageId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Process_GrowStage_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("Processes")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Process_MasterType_FK");

                    b.Navigation("Farm");

                    b.Navigation("GrowthStage");

                    b.Navigation("MasterType");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ProductHarvestHistory", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.HarvestHistory", "HarvestHistory")
                        .WithMany("ProductHarvestHistories")
                        .HasForeignKey("HarvestHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HarvestTy__Harve__40058253");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "Product")
                        .WithMany("HarvestTypeHistories")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ProductHarvestHistory_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", "Plant")
                        .WithMany("HarvestTypeHistories")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ProductHarvestHistory_Plant");

                    b.Navigation("HarvestHistory");

                    b.Navigation("Plant");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.RefreshToken", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__RefreshTo__UserI__3BFFE745");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Report", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "Answerer")
                        .WithMany("Answerers")
                        .HasForeignKey("AnswererID")
                        .HasConstraintName("FK_Report_Answerer__35227C52");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "Questioner")
                        .WithMany("Questioners")
                        .HasForeignKey("QuestionerID")
                        .HasConstraintName("FK_Report_Questioner__3231267C52");

                    b.Navigation("Answerer");

                    b.Navigation("Questioner");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Resource", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlantNote", "GraftedPlantNote")
                        .WithMany("Resources")
                        .HasForeignKey("GraftedPlantNoteID")
                        .HasConstraintName("FK_Resource_GraftedPlantNote");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LegalDocument", "LegalDocument")
                        .WithMany("Resources")
                        .HasForeignKey("LegalDocumentID")
                        .HasConstraintName("FK_Resource_LegalDocument");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantGrowthHistory", "PlantGrowthHistory")
                        .WithMany("Resources")
                        .HasForeignKey("PlantGrowthHistoryID")
                        .HasConstraintName("FK_Resource_PlantGrowthHistory");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserWorkLog", "UserWorkLog")
                        .WithMany("Resources")
                        .HasForeignKey("UserWorkLogID")
                        .HasConstraintName("FK_Resource_WorkLog");

                    b.Navigation("GraftedPlantNote");

                    b.Navigation("LegalDocument");

                    b.Navigation("PlantGrowthHistory");

                    b.Navigation("UserWorkLog");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.SubProcess", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "MasterType")
                        .WithMany("SubProcesses")
                        .HasForeignKey("MasterTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("SubProcess_MasterType_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.SubProcess", "ParentSubProcess")
                        .WithMany("ChildSubProcesses")
                        .HasForeignKey("ParentSubProcessId")
                        .HasConstraintName("SubProcess_SubProcess_FK_23AG53345");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Process", "Process")
                        .WithMany("SubProcesses")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__SubProces__Proce__3CF40B7E");

                    b.Navigation("MasterType");

                    b.Navigation("ParentSubProcess");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.TaskFeedback", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "Manager")
                        .WithMany("TaskFeedbacks")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TaskFeedb__Manag__3EDC53F0");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.WorkLog", "WorkLog")
                        .WithMany("TaskFeedbacks")
                        .HasForeignKey("WorkLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TaskFeedb__WorkL__339FAB6E");

                    b.Navigation("Manager");

                    b.Navigation("WorkLog");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Type_Type", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "CriteriaSet")
                        .WithMany("CriteriaSet")
                        .HasForeignKey("CriteriaSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Type_Type_2_Master_Type__24218C17");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", null)
                        .WithMany("Type_Types_1")
                        .HasForeignKey("MasterTypeId");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", null)
                        .WithMany("Type_Types_2")
                        .HasForeignKey("MasterTypeId1");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", "Product")
                        .WithMany("Products")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Type_Type_1_MasterType__43A51090D");

                    b.Navigation("CriteriaSet");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__User__RoleID__40C49C62");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserFarm", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", "Farm")
                        .WithMany("UserFarms")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserFarm__FarmID__41B8C09B");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Role", "Role")
                        .WithMany("UserFarms")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("UserFarm_Role_FK");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "User")
                        .WithMany("UserFarms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserFarm__UserID__42ACE4D4");

                    b.Navigation("Farm");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserWorkLog", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", "User")
                        .WithMany("UserWorkLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserWorkL__UserI__43A1090D");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.WorkLog", "WorkLog")
                        .WithMany("UserWorkLogs")
                        .HasForeignKey("WorkLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserWorkL__WorkL__25518C17");

                    b.Navigation("User");

                    b.Navigation("WorkLog");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.WorkLog", b =>
                {
                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CarePlanSchedule", "Schedule")
                        .WithMany("WorkLogs")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__WorkLog__Schedul__236943A5");

                    b.HasOne("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Warning", "Warning")
                        .WithMany("WorkLogs")
                        .HasForeignKey("WarningId")
                        .HasConstraintName("WorkLog_Warning_FK");

                    b.Navigation("Schedule");

                    b.Navigation("Warning");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.CarePlanSchedule", b =>
                {
                    b.Navigation("WorkLogs");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.ChatRoom", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Criteria", b =>
                {
                    b.Navigation("CriteriaTargets");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Crop", b =>
                {
                    b.Navigation("HarvestHistories");

                    b.Navigation("LandPlotCrops");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Farm", b =>
                {
                    b.Navigation("CarePlanSchedules");

                    b.Navigation("Crops");

                    b.Navigation("GrowthStageMasterTypes");

                    b.Navigation("GrowthStages");

                    b.Navigation("LandPlots");

                    b.Navigation("LegalDocuments");

                    b.Navigation("MasterTypes");

                    b.Navigation("Orders");

                    b.Navigation("Partners");

                    b.Navigation("Plans");

                    b.Navigation("PlantLots");

                    b.Navigation("Processes");

                    b.Navigation("UserFarms");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlant", b =>
                {
                    b.Navigation("CriteriaTargets");

                    b.Navigation("GraftedPlantNotes");

                    b.Navigation("PlanTargets");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GraftedPlantNote", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.GrowthStage", b =>
                {
                    b.Navigation("GrowthStageMasterTypes");

                    b.Navigation("GrowthStagePlans");

                    b.Navigation("Plants");

                    b.Navigation("Processes");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.HarvestHistory", b =>
                {
                    b.Navigation("CarePlanSchedules");

                    b.Navigation("ProductHarvestHistories");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandPlot", b =>
                {
                    b.Navigation("LandPlotCoordinations");

                    b.Navigation("LandPlotCrops");

                    b.Navigation("LandRows");

                    b.Navigation("PlanTargets");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LandRow", b =>
                {
                    b.Navigation("PlanTargets");

                    b.Navigation("Plants");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.LegalDocument", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.MasterType", b =>
                {
                    b.Navigation("CriteriaSet");

                    b.Navigation("Criterias");

                    b.Navigation("GrowthStageMasterTypes");

                    b.Navigation("HarvestTypeHistories");

                    b.Navigation("Notifications");

                    b.Navigation("Plans");

                    b.Navigation("PlantLots");

                    b.Navigation("Plants");

                    b.Navigation("Processes");

                    b.Navigation("Products");

                    b.Navigation("SubProcesses");

                    b.Navigation("Type_Types_1");

                    b.Navigation("Type_Types_2");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Notification", b =>
                {
                    b.Navigation("PlanNotifications");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Order", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Package", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PackageDetails");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Partner", b =>
                {
                    b.Navigation("PlantLots");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plan", b =>
                {
                    b.Navigation("CarePlanSchedule");

                    b.Navigation("GrowthStagePlans");

                    b.Navigation("PlanNotifications");

                    b.Navigation("PlanTargets");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Plant", b =>
                {
                    b.Navigation("ChildPlants");

                    b.Navigation("CriteriaTargets");

                    b.Navigation("GraftedPlants");

                    b.Navigation("HarvestTypeHistories");

                    b.Navigation("PlanTargets");

                    b.Navigation("PlantGrowthHistories");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantGrowthHistory", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.PlantLot", b =>
                {
                    b.Navigation("CriteriaTargets");

                    b.Navigation("GraftedPlants");

                    b.Navigation("InversePlantLotReference");

                    b.Navigation("PlanTargets");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Process", b =>
                {
                    b.Navigation("Plans");

                    b.Navigation("SubProcesses");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Role", b =>
                {
                    b.Navigation("UserFarms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.SubProcess", b =>
                {
                    b.Navigation("ChildSubProcesses");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.User", b =>
                {
                    b.Navigation("Answerers");

                    b.Navigation("ChatRooms");

                    b.Navigation("NotificationSenders");

                    b.Navigation("PlanNotifications");

                    b.Navigation("Plans");

                    b.Navigation("Questioners");

                    b.Navigation("RefreshTokens");

                    b.Navigation("TaskFeedbacks");

                    b.Navigation("UserFarms");

                    b.Navigation("UserWorkLogs");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.UserWorkLog", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.Warning", b =>
                {
                    b.Navigation("WorkLogs");
                });

            modelBuilder.Entity("CapstoneProject_SP25_IPAS_BussinessObject.Entities.WorkLog", b =>
                {
                    b.Navigation("TaskFeedbacks");

                    b.Navigation("UserWorkLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
